{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/user/user.service\";\nexport let AuthInterceptor = /*#__PURE__*/(() => {\n  class AuthInterceptor {\n    constructor(userService) {\n      this.userService = userService;\n    }\n\n    intercept(request, next) {\n      const idToken = this.userService.getToken();\n\n      if (idToken) {\n        request = request.clone({\n          setHeaders: {\n            Authorization: 'Bearer ' + JSON.parse(idToken)\n          }\n        });\n        return next.handle(request);\n      } else {\n        return next.handle(request); // .pipe(\n        //   tap(),\n        //   catchError((error: HttpErrorResponse) => {\n        //     let errorMsg = '';\n        //     if (error.error instanceof ErrorEvent) {\n        //       console.log('This is client side error');\n        //       errorMsg = `Error: ${error.error.message}`;\n        //     } else {\n        //       console.log('This is server side error');\n        //       errorMsg = `Error Code: ${error.status},  Message: ${error.message}`;\n        //     }\n        //     console.log(errorMsg);\n        //     return throwError(() => errorMsg);\n        //   })\n        // )\n      }\n    }\n\n  }\n\n  AuthInterceptor.ɵfac = function AuthInterceptor_Factory(t) {\n    return new (t || AuthInterceptor)(i0.ɵɵinject(i1.UserService));\n  };\n\n  AuthInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthInterceptor,\n    factory: AuthInterceptor.ɵfac\n  });\n  return AuthInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module"}